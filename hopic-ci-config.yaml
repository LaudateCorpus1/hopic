version:
  tag:    'v{version.major}.{version.minor}.{version.patch}'
  format: semver
  bump:
    policy: conventional-commits
    strict: yes

project-name: PIPE

scm:
  git:
    worktrees:
      doc/build/html: pages

phases:
  style:
    commit-messages:
      - python3 -m virtualenv --clear venv
      - venv/bin/python -m pip install --upgrade 'commisery>=0,<1'
      # Require each commit message to adhere to our requirements
      - foreach: AUTOSQUASHED_COMMIT
        sh: venv/bin/python venv/bin/commisery-verify-msg ${AUTOSQUASHED_COMMIT}
      - venv/bin/python venv/bin/commisery-verify-msg HEAD

  test:
    python2:
      - python2 -m virtualenv --clear venv2
      - venv2/bin/python -m pip install pathlib2 pytest<5 zipp<2
      - junit: junit-test.xml
        sh: sh -c 'ulimit -n 1024 && exec venv2/bin/python setup.py pytest'

    python:
      - python3 -m virtualenv --clear venv
      - junit: junit-test.xml
        sh: venv/bin/python setup.py pytest

  publish:
    python:
      - run-on-change: new-version-only
        with-credentials:
          id: hopic-pypi
          type: username-password
      - python3 -m venv venv3
      - venv3/bin/python -m pip install --upgrade twine wheel
      - venv3/bin/python setup.py sdist bdist_wheel
      - venv3/bin/python venv3/bin/twine upload -u ${USERNAME} -p ${PASSWORD} --repository pypi dist/*
